# list_1 = '1','2','3','7','4','9','6','72','26','16'
# list_2 = '6', '3', '8', '3', '4', '0', '8', '1', '5', '72', '12', '16'
# list_1 = [int(i) for i in list_1]
# list_2 = [int(i) for i in list_2] # Преобразование строк в список
# set1 = set(list_1) & set(list_2) # Пересечение множеств
# print(*sorted(set1))  

# n = int(input('Введите число: '))
# list_1 = [int(input('Введите число: ')) for i in range(n)]
# print(list_1)

# Последовательностью Фибоначчи называется
# последовательность чисел a0
# , a1, ..., an, ..., где a0 = 0, a1 = 1, 
# ak = ak-1 + ak-2 (k > 1).
# Требуется найти N-е число Фибоначчи
# Input: 7
# Output: 21

# def f(n):
#     if n == 1 or n == 0:
#         return 1
#     return f(n - 2) + f(n - 1)

    
# n = int(input('Введите число: '))
# print(f(n))


# Хакер Василий получил доступ к классному журналу и
# хочет заменить все свои минимальные оценки на
# максимальные. Напишите программу, которая
# заменяет оценки Василия, но наоборот: все
# максимальные – на минимальные.
# Input: 5 -> 1 3 3 3 4
# Output: 1 3 3 3 1

# list1 = [1, 3, 3, 3, 4]
# maxx = max(list1)
# minn = min(list1)
# list1 = [minn if i == maxx else i for i in list1]
# print(list1)


# Напишите функцию, которая принимает одно число и
# проверяет, является ли оно простым
# Напоминание: Простое число - это число, которое
# имеет 2 делителя: 1 и n(само число)
# Input: 5
# Output: yes


# def easynumber(n):
#     for i in range(2, int(n ** 0.5 + 1)):
#         if n % i == 0:
#             return False
#     return True
    
# n = abs(int(input('Введите число: ')))
# print(easynumber(n))


# Дано натуральное число N и
# последовательность из N элементов.
# Требуется вывести эту последовательность в
# обратном порядке.
# Примечание. В программе запрещается
# объявлять массивы и использовать циклы
# (даже для ввода и вывода).
# Input: 2 -> 3 4
# Output: 4 3


def oppositenumber(n):
    if n == 0:
        return
    k = int(input('Введите цифру: '))
    oppositenumber(n - 1)
    print(k, end = ' ')


n = int(input('Введите число: '))
oppositenumber(n)    