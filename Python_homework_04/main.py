# Даны два неупорядоченных набора целых чисел (может быть, с
# повторениями). Выдать без повторений в порядке возрастания все те числа, 
# которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n - кол-во элементов первого множества. m - кол-во
# элементов второго множества. Затем пользователь вводит сами элементы 
# множеств.

# num1 = input('Введите количество элементов n: ')
# num2 = input('Введите количество элементов m: ')

# set1 = set(map(int, num1.split(', ')))
# set2 = set(map(int, num2.split(', ')))

# allelements = list(set(set1) & set(set2))
# allelements.sort()

# for i in allelements:
#     print(i, end=' ')

# В фермерском хозяйстве в Карелии выращивают чернику. Она растет на
# круглой грядке, причем кусты высажены только по окружности. Таким образом, 
# у каждого куста есть ровно два соседних. Всего на грядке растет 
# N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них
# выросло различное число ягод – на i-ом кусте выросло ai
#  ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники.
# Эта система состоит из управляющего модуля и нескольких собирающих модулей.
# Собирающий модуль за один заход, находясь непосредственно перед некоторым
# кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может
# собрать за один заход собирающий модуль, находясь перед некоторым кустом
# заданной во входном файле грядки.

n = int(input('Введите кусты с ягодами: '))
berries = []

for i in range(n):
    berries_count = int(input('Введите количество ягод на кусте: '))
    berries.append(berries_count)
max_berries = 0

for i in range(n):
    modul = berries[i] + berries[(i + 1) % n] + berries[(i + 2) % n]
    if modul > max_berries:
        max_berries = modul
print(max_berries)
