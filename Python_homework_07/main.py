# Винни-Пух попросил Вас посмотреть, есть ли в его стихах ритм. Поскольку
# разобраться в его кричалках не настолько просто, насколько легко он их придумывает, Вам
# стоит написать программу. Винни-Пух считает, что ритм есть, если число слогов (т.е. число
# гласных букв) в каждой фразе стихотворения одинаковое. Фраза может состоять из одного
# слова, если во фразе несколько слов, то они разделяются дефисами. Фразы отделяются друг
# от друга пробелами. Стихотворение Винни-Пух вбивает в программу с клавиатуры. В ответе
# напишите “Парам пам-пам”, если с ритмом все в порядке и “Пам парам”, если с ритмом все не
# в порядке
# Ввод:                                  Вывод:
# пара-ра-рам рам-пам-папам па-ра-па-дам Парам пам-пам


# vowels = ['а', 'е', 'ё', 'и', 'о', 'у', 'ы', 'э', 'ю', 'я', 'a', 'e', 'i', 'o', 'u', 'y']
# stroka = input('Введите строку: ').split('-')

# count_vowels = []

# if len(stroka) == 1:
#     print('Количество фраз должно быть больше одной!')
# else:
#     for i in stroka:
#         count = len([letters for letters in i if letters.lower() in vowels])
#         count_vowels.append(count)
#     if count_vowels.count(count_vowels[0]):
#         print('Парам пам-пам')
#     else:
#         print('Пам парам')


# Напишите функцию print_operation_table(operation, num_rows=6, num_columns=6),
# которая принимает в качестве аргумента функцию, вычисляющую элемент по номеру строки и
# столбца. Аргументы num_rows и num_columns указывают число строк и столбцов таблицы,
# которые должны быть распечатаны. Нумерация строк и столбцов идет с единицы (подумайте,
# почему не с нуля). Примечание: бинарной операцией называется любая операция, у которой
# ровно два аргумента, как, например, у операции умножения.


def print_operation_table(operation, num_rows=9, num_columns=9):
    if num_rows < 2 or num_columns < 2:
        print("ОШИБКА! Размерности таблицы должны быть больше 2!")
    else:
        print(' '.join(list(map(str, range(1, num_columns + 1)))))
        for i in range(2, num_rows + 1):
            print(i, end=' ')
            for j in range(2, num_columns + 1):
                print(operation(i,j), end=' ')
            print()
print_operation_table(lambda x, y: x * y, 3, 3)



# print(' '.join(list(map(str, range(1, num_columns + 1))))) # Вывод строки
